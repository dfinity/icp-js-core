name: Publish and Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  publish-dfinity-packages:
    environment: Release
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main
        with:
          node_version_file: '.nvmrc'

      - run: pnpm build:packages

      - run: pnpm publish:dfinity-packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true'

  publish-core-package:
    environment: Release
    needs: publish-dfinity-packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      major_minor_patch_version: ${{ steps.ver.outputs.major_minor_patch_version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: dfinity/ci-tools/actions/extract-version@main
        id: extract-version
        with:
          file: 'packages/core/package.json'

      - name: Prepare version
        id: ver
        run: |
          echo "major_minor_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}" >> $GITHUB_OUTPUT
          echo "major_minor_patch_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}.${{ steps.extract-version.outputs.patch }}" >> $GITHUB_OUTPUT

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main
        with:
          node_version_file: '.nvmrc'

      - run: pnpm build:packages

      - name: Publish core package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true'
        run: pnpm publish:core-package --access public

      - name: Mark as Latest Release in GitHub Releases
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          gh release edit "${{ steps.ver.outputs.major_minor_patch_version }}" --draft=false --prerelease=false --latest=true

  publish-docs:
    needs: publish-core-package
    uses: ./.github/workflows/publish-docs.yml
    with:
      ref: ${{ needs.publish-core-package.outputs.major_minor_patch_version }}
    secrets: inherit
